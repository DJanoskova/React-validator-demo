(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{102:function(e,t,n){e.exports=n(306)},107:function(e,t,n){},306:function(e,t,n){"use strict";n.r(t);var a=n(0),r=n.n(a),l=n(17),s=n.n(l),i=(n(107),n(18)),u=n.n(i),o=n(20),c=n.n(o),m=n(7),d=n.n(m),b=n(29),p=n(21),f=n(16),E=n(30),h=n.n(E),v=n(31),g=n.n(v);function j(e){var t=e.name,n=e.validation,r=void 0===n?"":n,l=e.values,s=e.setValues,i=e.defaultInvalidAttr,u=e.handleError,o=g.a.pick(t,l)||"",c=Object(a.useState)(o),m=Object(f.a)(c,2),d=m[0],E=m[1],v=Object(a.useState)(!0),j=Object(f.a)(v,2),O=j[0],y=j[1],S=Object(a.useState)(!1),w=Object(f.a)(S,2),F=w[0],x=w[1],I=Object(a.useState)(!1),R=Object(f.a)(I,2),k=R[0],V=R[1],q=Object(a.useState)(r),T=Object(f.a)(q,1)[0],N=Object(a.useCallback)(function(){var e=function(e,t){var n,a=[];switch(typeof t){case"object":Object.keys(t).forEach(function(e){a.push({rule:e,options:t[e]})});break;case"string":default:if(!t.length)return!0;n=t.replace(/ /g,""),n.split(",").forEach(function(e){a.push({rule:e})})}var r=!0;return a.forEach(function(t){var n=t.rule,a=t.options,l=void 0===a?null:a;switch(n.trim()){case"isRequired":e||(r=!1);break;default:r&&(r=l?h.a[n](e,l):h.a[n](e))}}),r}(d,T);y(e),u(t,e)},[y,T,t,d,u]);Object(a.useEffect)(function(){d!==o&&(E(o),x(!1),V(!1))},[o,d,E,V,x]),Object(a.useEffect)(function(){N()},[N,t]);var C=Object(a.useCallback)(function(e){var n,a=e.target,r=a.value,i=a.checked,u="checkbox"===a.type?i:r;n=t.includes(".")?g.a.str(t,u,Object(p.a)({},l)):Object(p.a)({},l,Object(b.a)({},t,u)),E(u),s(n)},[E,l,s,t]),A=Object(a.useCallback)(function(){x(!0),V(!0),N()},[x,V,N]),W=Object(a.useCallback)(function(){V(!1)},[V]),D=!O&&F&&!k?i:null;return Object(p.a)({value:d,name:t,onChange:C,onFocus:A,onBlur:W},D)}function O(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{error:!0},n=Object(a.useState)(e),r=Object(f.a)(n,2),l=r[0],s=r[1],i=Object(a.useState)(!1),u=Object(f.a)(i,2),o=u[0],c=u[1],m=Object(a.useState)([]),d=Object(f.a)(m,2),b=d[0],p=d[1],E=Object(a.useCallback)(function(e,t){var n=b,a=n.findIndex(function(t){return t===e});t?a>-1&&n.splice(a,1):a<0&&n.push(e),p(n)},[b]);Object(a.useEffect)(function(){c(!0)},[]);return{values:l,setValues:s,useInput:function(e,n){return j({name:e,validation:n,values:l,setValues:s,defaultInvalidAttr:t,handleError:E})},errors:b,isValid:o&&!b.length}}var y=function(e){var t=e.code,n=Object(a.useState)(!1),l=Object(f.a)(n,2),s=l[0],i=l[1];return r.a.createElement(r.a.Fragment,null,r.a.createElement(c.a,{color:"secondary",onClick:function(){return i(!s)}},s?"Hide":"Show"," code"),s&&r.a.createElement("pre",null,t))},S=d()({marginTop:{marginTop:"1rem"}})(function(e){var t=e.classes,n=O({username:"",email:""}),a=n.values,l=n.useInput,s=n.isValid;return r.a.createElement(r.a.Fragment,null,r.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(a)}},r.a.createElement(u.a,Object.assign({fullWidth:!0,label:"Username *"},l("username","isRequired"))),r.a.createElement(u.a,Object.assign({fullWidth:!0,label:"E-mail *",className:t.marginTop},l("email","isRequired, isEmail"))),r.a.createElement(c.a,{type:"submit",disabled:!s,color:"primary",className:t.marginTop,variant:"contained"},"Submit")),r.a.createElement(y,{code:"import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { useForm } from '../utils/validator';\n\nconst styles = {\n  marginTop: {\n    marginTop: '1rem'\n  }\n};\n\nconst MaterialForm = ({ classes }) => {\n  const { values, useInput, isValid } = useForm({\n    username: '',\n    email: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        fullWidth\n        label=\"Username *\"\n        {...useInput('username', 'isRequired')}\n      />\n\n      <TextField\n        fullWidth\n        label=\"E-mail *\"\n        className={classes.marginTop}\n        {...useInput('email', 'isRequired, isEmail')}\n      />\n\n      <Button type=\"submit\"\n        disabled={!isValid}\n        color=\"primary\"\n        className={classes.marginTop}\n        variant=\"contained\">\n        Submit\n      </Button>\n    </form>\n  )\n};\n\nexport default withStyles(styles)(MaterialForm);"}))}),w=d()({marginTop:{marginTop:"1rem"}})(function(e){var t=e.classes,n=O({count:"",user:{username:"",email:""}}),a=n.values,l=n.useInput,s=n.isValid;return r.a.createElement(r.a.Fragment,null,r.a.createElement("pre",null,JSON.stringify(a,0,2)),r.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(a)}},r.a.createElement(u.a,Object.assign({fullWidth:!0,label:"Count *"},l("count","isRequired"))),r.a.createElement(u.a,Object.assign({fullWidth:!0,label:"Username *",className:t.marginTop},l("user.username","isRequired"))),r.a.createElement(u.a,Object.assign({fullWidth:!0,label:"E-mail *",className:t.marginTop},l("user.email","isRequired, isEmail"))),r.a.createElement(c.a,{type:"submit",disabled:!s,color:"primary",className:t.marginTop,variant:"contained"},"Submit")),r.a.createElement(y,{code:"import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { useForm } from '../utils/validator';\nimport ToggleCode from '../components/ToggleCode';\nimport MaterialFormCode from '../data/MaterialFormCode';\n\nconst styles = {\n  marginTop: {\n    marginTop: '1rem'\n  }\n};\n\nconst MaterialForm = ({ classes }) => {\n  const { values, useInput, isValid } = useForm({\n    count: '',\n    user: {\n      username: '',\n      email: ''\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        fullWidth\n        label=\"Count *\"\n        {...useInput('count', 'isRequired')}\n      />\n\n      <TextField\n        fullWidth\n        label=\"Username *\"\n        className={classes.marginTop}\n        {...useInput('user.username', 'isRequired')}\n      />\n\n      <TextField\n        fullWidth\n        label=\"E-mail *\"\n        className={classes.marginTop}\n        {...useInput('user.email', 'isRequired, isEmail')}\n      />\n\n      <Button type=\"submit\"\n        disabled={!isValid}\n        color=\"primary\"\n        className={classes.marginTop}\n        variant=\"contained\">\n        Submit\n      </Button>\n    </form>\n  )\n};\n\nexport default withStyles(styles)(MaterialForm);"}))}),F=function(){var e=O({username:"",email:"",age:""},{className:"has-error","another-attr":"look-at-me"}),t=e.values,n=e.useInput,a=e.isValid;return r.a.createElement(r.a.Fragment,null,r.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(t)}},r.a.createElement("div",{className:"form-body"},r.a.createElement("label",null,"Username *"),r.a.createElement("input",Object.assign({type:"text"},n("username",{isRequired:!0}))),r.a.createElement("label",null,"E-mail"),r.a.createElement("input",Object.assign({type:"text"},n("email","isEmail"))),r.a.createElement("label",null,"Age"),r.a.createElement("input",Object.assign({type:"text"},n("age",{isInt:{min:1}})))),r.a.createElement("button",{type:"submit",disabled:!a},"Submit")),r.a.createElement(y,{code:"import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst CustomForm = () => {\n  const defaultValues = {\n    username: '',\n    email: '',\n    age: ''\n  };\n  const customErrorAttribute = {\n    className: 'has-error',\n    'another-attr': 'look-at-me'\n  };\n\n  const { values, useInput, isValid } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-body\">\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', {\n            isRequired: true\n          })}\n        />\n\n        <label>E-mail</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail')}\n        />\n\n        <label>Age</label>\n        <input\n          type=\"text\"\n          {...useInput('age', {\n            isInt: {\n              min: 1\n            }\n          })}\n        />\n      </div>\n\n      <button type=\"submit\" disabled={!isValid}>\n        Submit\n      </button>\n    </form>\n  )\n};\n\nexport default CustomForm;"}))},x=function(){var e=O({username:"",email:""},{className:"has-error"}),t=e.values,n=e.useInput,a=e.isValid,l=e.setValues;return r.a.createElement(r.a.Fragment,null,r.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(t),l({username:"",email:""})}},r.a.createElement("div",{className:"form-body"},r.a.createElement("label",null,"Username *"),r.a.createElement("input",Object.assign({type:"text"},n("username",{isRequired:!0}))),r.a.createElement("label",null,"E-mail *"),r.a.createElement("input",Object.assign({type:"text"},n("email","isEmail, isRequired")))),r.a.createElement("button",{type:"submit",disabled:!a},"Submit")),r.a.createElement(y,{code:"import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst ResettingForm = () => {\n  const defaultValues = {\n    username: '',\n    email: ''\n  };\n  const customErrorAttribute = {\n    className: 'has-error'\n  };\n\n  const { values, useInput, isValid, setValues } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values);\n    setValues({\n      username: '',\n      email: ''\n    })\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-body\">\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', {\n            isRequired: true\n          })}\n        />\n\n        <label>E-mail *</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail, isRequired')}\n        />\n      </div>\n\n      <button type=\"submit\" disabled={!isValid}>\n        Submit\n      </button>\n    </form>\n  )\n};\n\nexport default ResettingForm;"}))},I=function(){var e=O({username:"",email:"",age:"",password:"",passwordVerification:""},{className:"has-error"}),t=e.values,n=e.useInput,a=e.isValid,l=e.errors;return r.a.createElement(r.a.Fragment,null,r.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(t)}},r.a.createElement("label",null,"Username *"),r.a.createElement("input",Object.assign({type:"text"},n("username","isRequired"))),l.username&&r.a.createElement("span",null,"Username is required"),r.a.createElement("label",null,"E-mail *"),r.a.createElement("input",Object.assign({type:"text"},n("email","isEmail, isRequired"))),r.a.createElement("label",null,"Age *"),r.a.createElement("input",Object.assign({type:"text"},n("age",{isInt:{min:1},isRequired:!0}))),r.a.createElement("label",null,"Password * ",r.a.createElement("span",{className:"small"},"min. 6 characters")),r.a.createElement("input",Object.assign({type:"password"},n("password",{isRequired:!0,isLength:{min:6}}))),r.a.createElement("label",null,"Password verification"),r.a.createElement("input",Object.assign({type:"password"},n("passwordVerification",{isRequired:!0,equals:t.password}))),r.a.createElement("button",{type:"submit",disabled:!a},"Submit")),r.a.createElement("br",null),"You can check the errors object and the unmet criteria to create custom validation messages. Fill the form and check how errors change.",r.a.createElement("pre",null,JSON.stringify(l,null,2)),r.a.createElement(y,{code:"import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst ErrorsForm = () => {\n  const defaultValues = {\n    username: '',\n    email: '',\n    age: '',\n    password: '',\n    passwordVerification: ''\n  };\n  const customErrorAttribute = {\n    className: 'has-error'\n  };\n\n  const { values, useInput, isValid, errors } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', 'isRequired')}\n        />\n        {errors.username && <span>Username is required</span>}\n\n        <label>E-mail *</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail, isRequired')}\n        />\n\n        <label>Age *</label>\n        <input\n          type=\"text\"\n          {...useInput('age', {\n            isInt: {\n              min: 1\n            },\n            isRequired: true\n          })}\n        />\n\n        <label>Password * <span className=\"small\">min. 6 characters</span></label>\n        <input\n          type=\"password\"\n          {...useInput('password', {\n            isRequired: true,\n            isLength: {\n              min: 6\n            }\n          })}\n        />\n\n        <label>Password verification</label>\n        <input\n          type=\"password\"\n          {...useInput('passwordVerification', {\n            isRequired: true,\n            equals: values.password\n          })}\n        />\n\n        <button type=\"submit\" disabled={!isValid}>\n          Submit\n        </button>\n      </form>\n\n      <br />\n\n      You can check the errors object and the unmet criteria to create custom validation messages. Fill the form and\n      check how errors change.\n\n      <pre>{JSON.stringify(errors, null, 2)}</pre>\n    </>\n  )\n};\n\nexport default ErrorsForm;"}))},R=n(101),k=[];function V(e){var t=e.name,n=e.validation,r=void 0===n?"":n,l=e.tooltip,s=void 0===l?"":l,i=e.values,u=e.setValues,o=e.defaultInvalidAttr,c=g.a.pick(t,i)||"",m=Object(a.useState)(c),d=Object(f.a)(m,2),E=d[0],v=d[1],j=Object(a.useState)(!0),O=Object(f.a)(j,2),y=O[0],S=O[1],w=Object(a.useState)(!1),F=Object(f.a)(w,2),x=F[0],I=F[1],V=Object(a.useState)(!1),q=Object(f.a)(V,2),T=q[0],N=q[1],C=Object(a.useState)(r),A=Object(f.a)(C,1)[0],W=Object(a.useCallback)(function(){var e=function(e,t){var n,a=[];switch(typeof t){case"object":Object.keys(t).forEach(function(e){a.push({rule:e,options:t[e]})});break;case"string":default:if(!t.length)return!0;n=t.replace(/ /g,""),n.split(",").forEach(function(e){a.push({rule:e})})}var r=!0;return a.forEach(function(t){var n=t.rule,a=t.options,l=void 0===a?null:a;switch(n.trim()){case"isRequired":e||(r=!1);break;default:r&&(r=l?h.a[n](e,l):h.a[n](e))}}),r}(E,A);S(e),function(e,t){if(t){var n=k.findIndex(function(t){return t===e});n>-1&&k.splice(n,1)}else k.push(e);k=Object(R.a)(new Set(k))}(t,e)},[S,A,t,E]);Object(a.useEffect)(function(){E!==c&&(v(c),I(!1),N(!1))},[c,E,v,N,I]),Object(a.useEffect)(function(){W()},[W,t]);var D=Object(a.useCallback)(function(e){var n,a=e.target,r=a.value,l=a.checked,s="checkbox"===a.type?l:r;n=t.includes(".")?g.a.str(t,s,Object(p.a)({},i)):Object(p.a)({},i,Object(b.a)({},t,s)),v(s),u(n)},[v,i,u,t]),U=Object(a.useCallback)(function(){I(!0),N(!0),W()},[I,N,W]),B=Object(a.useCallback)(function(){N(!1)},[N]),M=!y&&x&&!T?o:null;return Object(p.a)({value:E,name:t,helperText:T&&s?s:"",onChange:D,onFocus:U,onBlur:B},M)}var q=function(){var e=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{error:!0},n=Object(a.useState)(e),r=Object(f.a)(n,2),l=r[0],s=r[1],i=Object(a.useState)(!1),u=Object(f.a)(i,2),o=u[0],c=u[1];return Object(a.useEffect)(function(){return c(!0),function(){k=[]}},[]),{values:l,setValues:s,useInput:function(e,n,a){return V({name:e,validation:n,tooltip:a,values:l,setValues:s,defaultInvalidAttr:t})},errors:k,isValid:o&&!k.length}}({username:"",email:""}),t=e.values,n=e.useInput,l=e.isValid;return r.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(t)}},r.a.createElement(u.a,Object.assign({label:"With custom text"},n("withCustomText","isRequired","You're focusing me now"))),r.a.createElement(u.a,Object.assign({label:"With custom text 2"},n("withCustomText2","isRequired","And now it's me for a change"))),r.a.createElement("br",null),r.a.createElement("br",null),r.a.createElement(c.a,{type:"submit",disabled:!l,color:"primary",variant:"contained"},"Submit"))},T=function(){return r.a.createElement("div",{className:"container"},r.a.createElement("h3",null,"Simple material form"),r.a.createElement(S,null),r.a.createElement("h3",null,"NEW - Nested values"),r.a.createElement(w,null),r.a.createElement("hr",null),r.a.createElement("h3",null,"Form with custom error input class"),r.a.createElement("p",null,"We're adding a ",r.a.createElement("code",null,".has-error")," class to the inputs. We're also adding a ",r.a.createElement("code",null,"another-attr")," attribute to show the possibility to add more error attributes."),r.a.createElement(F,null),r.a.createElement("hr",null),r.a.createElement("h3",null,"Form that resets upon submitting"),r.a.createElement("p",null,"Also resets ",r.a.createElement("code",null,"is-touched")," and ",r.a.createElement("code",null,"is-focused")," input properties"),r.a.createElement(x,null),r.a.createElement("hr",null),r.a.createElement("h3",null,"List of invalid fields"),r.a.createElement(I,null),r.a.createElement("hr",null),r.a.createElement("h3",null,"A demo of enhanced validator that shows helper text on hover"),r.a.createElement(q,null),r.a.createElement("hr",null),r.a.createElement("div",{className:"text-center"},r.a.createElement("a",{href:"https://medium.com/@info_53938/how-i-tried-to-validate-react-forms-with-hooks-31634fc5385b",target:"_blank",className:"link",rel:"noopener noreferrer"},"How I tried to validate React forms (with hooks) at Medium"),r.a.createElement("br",null),r.a.createElement("a",{href:"https://github.com/DJanoskova/React-validator-demo",target:"_blank",rel:"noopener noreferrer",className:"link"},"The source code at GitHub")))};s.a.render(r.a.createElement(T,null),document.getElementById("root"))}},[[102,1,2]]]);
//# sourceMappingURL=main.adffb9de.chunk.js.map