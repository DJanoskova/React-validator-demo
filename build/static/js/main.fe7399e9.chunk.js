(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{102:function(e,n,t){e.exports=t(306)},107:function(e,n,t){},306:function(e,n,t){"use strict";t.r(n);var a=t(0),l=t.n(a),r=t(17),s=t.n(r),i=(t(107),t(19)),u=t.n(i),o=t(22),c=t.n(o),m=t(7),b=t.n(m),d=t(42),p=t(25),f=t(20),h=t(16),E=t(23),v=t.n(E),g=t(18),O=t.n(g);function j(e){var n=e.name,t=e.validation,l=void 0===t?"":t,r=e.values,s=e.setValues,i=e.defaultInvalidAttr,u=e.handleError,o=O.a.pick(n,r)||"",c=Object(a.useState)(o),m=Object(h.a)(c,2),b=m[0],d=m[1],E=Object(a.useState)(!0),g=Object(h.a)(E,2),j=g[0],y=g[1],x=Object(a.useState)(!1),S=Object(h.a)(x,2),k=S[0],w=S[1],F=Object(a.useState)(!1),V=Object(h.a)(F,2),I=V[0],R=V[1],C=Object(a.useState)(l),q=Object(h.a)(C,1)[0],N=Object(a.useCallback)(function(){var e=function(e,n){var t,a=[];switch(typeof n){case"object":Object.keys(n).forEach(function(e){a.push({rule:e,options:n[e]})});break;case"string":default:if(!n.length)return!0;t=n.replace(/ /g,""),t.split(",").forEach(function(e){a.push({rule:e})})}var l=!0;return a.forEach(function(n){var t=n.rule,a=n.options,r=void 0===a?null:a;switch(t.trim()){case"isRequired":e||(l=!1);break;default:if(l){if(null!==r){var s;switch(r){case!0:s=v.a[t](e);break;case!1:s=!v.a[t](e);break;default:s=v.a[t](e,r)}l=s}else l=v.a[t](e);break}}}),l}(b,q);y(e),u(n,e)},[y,q,n,b,u]);Object(a.useEffect)(function(){b!==o&&(d(o),w(!1),R(!1))},[o,b,d,R,w]),Object(a.useEffect)(function(){N()},[N,n]);var T=Object(a.useCallback)(function(e){var t,a=e.target,l=a.value,i=a.checked,u="checkbox"===a.type?i:l;n.includes(".")?(O.a.override=!0,t=O.a.str(n,u,Object(f.a)({},r))):t=Object(f.a)({},r,Object(p.a)({},n,u)),d(u),s(t)},[d,r,s,n]),A=Object(a.useCallback)(function(){w(!0),R(!0),N()},[w,R,N]),D=Object(a.useCallback)(function(){R(!1)},[R]),W=!j&&k&&!I?i:null;return Object(f.a)({value:b,name:n,onChange:T,onFocus:A,onBlur:D},W)}function y(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{error:!0},t=Object(a.useState)(e),l=Object(h.a)(t,2),r=l[0],s=l[1],i=Object(a.useState)(!1),u=Object(h.a)(i,2),o=u[0],c=u[1],m=Object(a.useState)([]),b=Object(h.a)(m,2),E=b[0],v=b[1],g=Object(a.useCallback)(function(e,n){var t=E,a=t.findIndex(function(n){return n===e});n?a>-1&&t.splice(a,1):a<0&&t.push(e),v(t)},[E]);Object(a.useEffect)(function(){c(!0)},[]);return{values:r,setValues:s,useInput:function(e,t){return j({name:e,validation:t,values:r,setValues:s,defaultInvalidAttr:n,handleError:g})},useCheckboxGroup:function(e,n){return function(e){var n=e.name,t=e.value,l=e.values,r=e.setValues,s=O.a.pick(n,l)||[],i=s.indexOf(t)>-1,u=Object(a.useState)(i),o=Object(h.a)(u,2),c=o[0],m=o[1];Object(a.useEffect)(function(){var e=s.indexOf(t)>-1;m(e)},[s,t]);var b=Object(a.useCallback)(function(e){var a,s,i=e.target,u=O.a.pick(n,l)||[],o=i.checked,c=u.indexOf(t);o&&c<0?a=[].concat(Object(d.a)(u),[t]):!o&&c>-1&&(a=u.filter(function(e){return e!==t})),n.includes(".")?(O.a.override=!0,s=O.a.str(n,a,Object(f.a)({},l))):s=Object(f.a)({},l,Object(p.a)({},n,a)),m(o),r(s)},[t,l,r,n]);return{name:n,checked:c,onChange:b}}({name:e,values:r,setValues:s,value:n})},errors:E,isValid:o&&!E.length}}var x=function(e){var n=e.code,t=Object(a.useState)(!1),r=Object(h.a)(t,2),s=r[0],i=r[1];return l.a.createElement(l.a.Fragment,null,l.a.createElement(c.a,{color:"secondary",onClick:function(){return i(!s)}},s?"Hide":"Show"," code"),s&&l.a.createElement("pre",null,n))},S=b()({marginTop:{marginTop:"1rem"}})(function(e){var n=e.classes,t=y({username:"",email:""}),a=t.values,r=t.useInput,s=t.isValid;return l.a.createElement(l.a.Fragment,null,l.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(a)}},l.a.createElement(u.a,Object.assign({fullWidth:!0,label:"Username *"},r("username","isRequired"))),l.a.createElement(u.a,Object.assign({fullWidth:!0,label:"E-mail *",className:n.marginTop},r("email","isRequired, isEmail"))),l.a.createElement(c.a,{type:"submit",disabled:!s,color:"primary",className:n.marginTop,variant:"contained"},"Submit")),l.a.createElement(x,{code:"import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { useForm } from '../utils/validator';\n\nconst styles = {\n  marginTop: {\n    marginTop: '1rem'\n  }\n};\n\nconst MaterialForm = ({ classes }) => {\n  const { values, useInput, isValid } = useForm({\n    username: '',\n    email: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        fullWidth\n        label=\"Username *\"\n        {...useInput('username', 'isRequired')}\n      />\n\n      <TextField\n        fullWidth\n        label=\"E-mail *\"\n        className={classes.marginTop}\n        {...useInput('email', 'isRequired, isEmail')}\n      />\n\n      <Button type=\"submit\"\n        disabled={!isValid}\n        color=\"primary\"\n        className={classes.marginTop}\n        variant=\"contained\">\n        Submit\n      </Button>\n    </form>\n  )\n};\n\nexport default withStyles(styles)(MaterialForm);"}))}),k=b()({marginTop:{marginTop:"1rem"}})(function(e){var n=e.classes,t=y({count:"",user:{username:"",email:""}}),a=t.values,r=t.useInput,s=t.isValid;return l.a.createElement(l.a.Fragment,null,l.a.createElement("pre",null,JSON.stringify(a,0,2)),l.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(a)}},l.a.createElement(u.a,Object.assign({fullWidth:!0,label:"Count *"},r("count","isRequired"))),l.a.createElement(u.a,Object.assign({fullWidth:!0,label:"Username *",className:n.marginTop},r("user.username","isRequired"))),l.a.createElement(u.a,Object.assign({fullWidth:!0,label:"E-mail *",className:n.marginTop},r("user.email","isRequired, isEmail"))),l.a.createElement(c.a,{type:"submit",disabled:!s,color:"primary",className:n.marginTop,variant:"contained"},"Submit")),l.a.createElement(x,{code:"import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { useForm } from '../utils/validator';\nimport ToggleCode from '../components/ToggleCode';\nimport MaterialFormCode from '../data/MaterialFormCode';\n\nconst styles = {\n  marginTop: {\n    marginTop: '1rem'\n  }\n};\n\nconst MaterialForm = ({ classes }) => {\n  const { values, useInput, isValid } = useForm({\n    count: '',\n    user: {\n      username: '',\n      email: ''\n    }\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        fullWidth\n        label=\"Count *\"\n        {...useInput('count', 'isRequired')}\n      />\n\n      <TextField\n        fullWidth\n        label=\"Username *\"\n        className={classes.marginTop}\n        {...useInput('user.username', 'isRequired')}\n      />\n\n      <TextField\n        fullWidth\n        label=\"E-mail *\"\n        className={classes.marginTop}\n        {...useInput('user.email', 'isRequired, isEmail')}\n      />\n\n      <Button type=\"submit\"\n        disabled={!isValid}\n        color=\"primary\"\n        className={classes.marginTop}\n        variant=\"contained\">\n        Submit\n      </Button>\n    </form>\n  )\n};\n\nexport default withStyles(styles)(MaterialForm);"}))}),w=function(){var e=y({animals:["dog","cat"]}),n=e.values,t=e.useCheckboxGroup,a=e.isValid;return l.a.createElement(l.a.Fragment,null,l.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(n)}},l.a.createElement("div",null,"My animals:",l.a.createElement("div",{className:"form-checkbox-group"},l.a.createElement("label",null,"Dog",l.a.createElement("input",Object.assign({type:"checkbox"},t("animals","dog")))),l.a.createElement("label",null,"Cat",l.a.createElement("input",Object.assign({type:"checkbox"},t("animals","cat")))),l.a.createElement("label",null,"Guinea pig",l.a.createElement("input",Object.assign({type:"checkbox"},t("animals","guineapig")))),l.a.createElement("label",null,"Hamster",l.a.createElement("input",Object.assign({type:"checkbox"},t("animals","hamster")))))),l.a.createElement("button",{type:"submit",disabled:!a},"Submit")),l.a.createElement("pre",null,JSON.stringify(n,null,2)),l.a.createElement(x,{code:"import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst CheckboxGroupForm = () => {\n  const defaultValues = {\n    animals: ['dog', 'cat']\n  };\n\n  const { values, useCheckboxGroup, isValid } = useForm(defaultValues);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        My animals:\n        <div className=\"form-checkbox-group\">\n          <label>\n            Dog\n            <input\n              type=\"checkbox\"\n              {...useCheckboxGroup('animals', 'dog')}\n            />\n          </label>\n          <label>\n            Cat\n            <input\n              type=\"checkbox\"\n              {...useCheckboxGroup('animals', 'cat')}\n            />\n          </label>\n          <label>\n            Guinea pig\n            <input\n              type=\"checkbox\"\n              {...useCheckboxGroup('animals', 'guineapig')}\n            />\n          </label>\n          <label>\n            Hamster\n            <input\n              type=\"checkbox\"\n              {...useCheckboxGroup('animals', 'hamster')}\n            />\n          </label>\n        </div>\n      </div>\n\n      <button type=\"submit\" disabled={!isValid}>\n        Submit\n      </button>\n    </form>\n  )\n};\n\nexport default CheckboxGroupForm;"}))},F=function(){var e=y({username:"",email:"",age:""},{className:"has-error","another-attr":"look-at-me"}),n=e.values,t=e.useInput,a=e.isValid;return l.a.createElement(l.a.Fragment,null,l.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(n)}},l.a.createElement("div",{className:"form-body"},l.a.createElement("label",null,"Username *"),l.a.createElement("input",Object.assign({type:"text"},t("username",{isRequired:!0}))),l.a.createElement("label",null,"E-mail"),l.a.createElement("input",Object.assign({type:"text"},t("email","isEmail"))),l.a.createElement("label",null,"Age"),l.a.createElement("input",Object.assign({type:"text"},t("age",{isInt:{min:1}})))),l.a.createElement("button",{type:"submit",disabled:!a},"Submit")),l.a.createElement(x,{code:"import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst CustomForm = () => {\n  const defaultValues = {\n    username: '',\n    email: '',\n    age: ''\n  };\n  const customErrorAttribute = {\n    className: 'has-error',\n    'another-attr': 'look-at-me'\n  };\n\n  const { values, useInput, isValid } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-body\">\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', {\n            isRequired: true\n          })}\n        />\n\n        <label>E-mail</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail')}\n        />\n\n        <label>Age</label>\n        <input\n          type=\"text\"\n          {...useInput('age', {\n            isInt: {\n              min: 1\n            }\n          })}\n        />\n      </div>\n\n      <button type=\"submit\" disabled={!isValid}>\n        Submit\n      </button>\n    </form>\n  )\n};\n\nexport default CustomForm;"}))},V=function(){var e=y({username:"",email:""},{className:"has-error"}),n=e.values,t=e.useInput,a=e.isValid,r=e.setValues;return l.a.createElement(l.a.Fragment,null,l.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(n),r({username:"",email:""})}},l.a.createElement("div",{className:"form-body"},l.a.createElement("label",null,"Username *"),l.a.createElement("input",Object.assign({type:"text"},t("username",{isRequired:!0}))),l.a.createElement("label",null,"E-mail *"),l.a.createElement("input",Object.assign({type:"text"},t("email","isEmail, isRequired")))),l.a.createElement("button",{type:"submit",disabled:!a},"Submit")),l.a.createElement(x,{code:"import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst ResettingForm = () => {\n  const defaultValues = {\n    username: '',\n    email: ''\n  };\n  const customErrorAttribute = {\n    className: 'has-error'\n  };\n\n  const { values, useInput, isValid, setValues } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values);\n    setValues({\n      username: '',\n      email: ''\n    })\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-body\">\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', {\n            isRequired: true\n          })}\n        />\n\n        <label>E-mail *</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail, isRequired')}\n        />\n      </div>\n\n      <button type=\"submit\" disabled={!isValid}>\n        Submit\n      </button>\n    </form>\n  )\n};\n\nexport default ResettingForm;"}))},I=function(){var e=y({username:"",email:"",age:"",password:"",passwordVerification:""},{className:"has-error"}),n=e.values,t=e.useInput,a=e.isValid,r=e.errors;return l.a.createElement(l.a.Fragment,null,l.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(n)}},l.a.createElement("label",null,"Username *"),l.a.createElement("input",Object.assign({type:"text"},t("username","isRequired"))),r.username&&l.a.createElement("span",null,"Username is required"),l.a.createElement("label",null,"E-mail *"),l.a.createElement("input",Object.assign({type:"text"},t("email","isEmail, isRequired"))),l.a.createElement("label",null,"Age *"),l.a.createElement("input",Object.assign({type:"text"},t("age",{isInt:{min:1},isRequired:!0}))),l.a.createElement("label",null,"Password * ",l.a.createElement("span",{className:"small"},"min. 6 characters")),l.a.createElement("input",Object.assign({type:"password"},t("password",{isRequired:!0,isLength:{min:6}}))),l.a.createElement("label",null,"Password verification"),l.a.createElement("input",Object.assign({type:"password"},t("passwordVerification",{isRequired:!0,equals:n.password}))),l.a.createElement("button",{type:"submit",disabled:!a},"Submit")),l.a.createElement("br",null),"You can check the errors object and the unmet criteria to create custom validation messages. Fill the form and check how errors change.",l.a.createElement("pre",null,JSON.stringify(r,null,2)),l.a.createElement(x,{code:"import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst ErrorsForm = () => {\n  const defaultValues = {\n    username: '',\n    email: '',\n    age: '',\n    password: '',\n    passwordVerification: ''\n  };\n  const customErrorAttribute = {\n    className: 'has-error'\n  };\n\n  const { values, useInput, isValid, errors } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', 'isRequired')}\n        />\n        {errors.username && <span>Username is required</span>}\n\n        <label>E-mail *</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail, isRequired')}\n        />\n\n        <label>Age *</label>\n        <input\n          type=\"text\"\n          {...useInput('age', {\n            isInt: {\n              min: 1\n            },\n            isRequired: true\n          })}\n        />\n\n        <label>Password * <span className=\"small\">min. 6 characters</span></label>\n        <input\n          type=\"password\"\n          {...useInput('password', {\n            isRequired: true,\n            isLength: {\n              min: 6\n            }\n          })}\n        />\n\n        <label>Password verification</label>\n        <input\n          type=\"password\"\n          {...useInput('passwordVerification', {\n            isRequired: true,\n            equals: values.password\n          })}\n        />\n\n        <button type=\"submit\" disabled={!isValid}>\n          Submit\n        </button>\n      </form>\n\n      <br />\n\n      You can check the errors object and the unmet criteria to create custom validation messages. Fill the form and\n      check how errors change.\n\n      <pre>{JSON.stringify(errors, null, 2)}</pre>\n    </>\n  )\n};\n\nexport default ErrorsForm;"}))},R=[];function C(e){var n=e.name,t=e.validation,l=void 0===t?"":t,r=e.tooltip,s=void 0===r?"":r,i=e.values,u=e.setValues,o=e.defaultInvalidAttr,c=O.a.pick(n,i)||"",m=Object(a.useState)(c),b=Object(h.a)(m,2),E=b[0],g=b[1],j=Object(a.useState)(!0),y=Object(h.a)(j,2),x=y[0],S=y[1],k=Object(a.useState)(!1),w=Object(h.a)(k,2),F=w[0],V=w[1],I=Object(a.useState)(!1),C=Object(h.a)(I,2),q=C[0],N=C[1],T=Object(a.useState)(l),A=Object(h.a)(T,1)[0],D=Object(a.useCallback)(function(){var e=function(e,n){var t,a=[];switch(typeof n){case"object":Object.keys(n).forEach(function(e){a.push({rule:e,options:n[e]})});break;case"string":default:if(!n.length)return!0;t=n.replace(/ /g,""),t.split(",").forEach(function(e){a.push({rule:e})})}var l=!0;return a.forEach(function(n){var t=n.rule,a=n.options,r=void 0===a?null:a;switch(t.trim()){case"isRequired":e||(l=!1);break;default:l&&(l=r?v.a[t](e,r):v.a[t](e))}}),l}(E,A);S(e),function(e,n){if(n){var t=R.findIndex(function(n){return n===e});t>-1&&R.splice(t,1)}else R.push(e);R=Object(d.a)(new Set(R))}(n,e)},[S,A,n,E]);Object(a.useEffect)(function(){E!==c&&(g(c),V(!1),N(!1))},[c,E,g,N,V]),Object(a.useEffect)(function(){D()},[D,n]);var W=Object(a.useCallback)(function(e){var t,a=e.target,l=a.value,r=a.checked,s="checkbox"===a.type?r:l;n.includes(".")?(O.a.override=!0,t=O.a.str(n,s,Object(f.a)({},i))):t=Object(f.a)({},i,Object(p.a)({},n,s)),g(s),u(t)},[g,i,u,n]),G=Object(a.useCallback)(function(){V(!0),N(!0),D()},[V,N,D]),U=Object(a.useCallback)(function(){N(!1)},[N]),B=!x&&F&&!q?o:null;return Object(f.a)({value:E,name:n,helperText:q&&s?s:"",onChange:W,onFocus:G,onBlur:U},B)}var q=function(){var e=function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{error:!0},t=Object(a.useState)(e),l=Object(h.a)(t,2),r=l[0],s=l[1],i=Object(a.useState)(!1),u=Object(h.a)(i,2),o=u[0],c=u[1];return Object(a.useEffect)(function(){return c(!0),function(){R=[]}},[]),{values:r,setValues:s,useInput:function(e,t,a){return C({name:e,validation:t,tooltip:a,values:r,setValues:s,defaultInvalidAttr:n})},errors:R,isValid:o&&!R.length}}({username:"",email:""}),n=e.values,t=e.useInput,r=e.isValid;return l.a.createElement("form",{onSubmit:function(e){e.preventDefault(),console.log(n)}},l.a.createElement(u.a,Object.assign({label:"With custom text"},t("withCustomText","isRequired","You're focusing me now"))),l.a.createElement(u.a,Object.assign({label:"With custom text 2"},t("withCustomText2","isRequired","And now it's me for a change"))),l.a.createElement("br",null),l.a.createElement("br",null),l.a.createElement(c.a,{type:"submit",disabled:!r,color:"primary",variant:"contained"},"Submit"))},N=function(){return l.a.createElement("div",{className:"container"},l.a.createElement("h3",null,"Simple material form"),l.a.createElement(S,null),l.a.createElement("h3",null,"Nested values"),l.a.createElement(k,null),l.a.createElement("hr",null),l.a.createElement("h3",null,"NEW - Checkbox group"),l.a.createElement("p",null,"Use the new function ",l.a.createElement("code",null,"useCheckboxGroup")," from ",l.a.createElement("code",null,"useForm()")," - the first argument is the property ",l.a.createElement("strong",null,"name")," and the second is the checkbox ",l.a.createElement("strong",null,"value")),l.a.createElement(w,null),l.a.createElement("hr",null),l.a.createElement("h3",null,"Form with custom error input class"),l.a.createElement("p",null,"We're adding a ",l.a.createElement("code",null,".has-error")," class to the inputs. We're also adding a ",l.a.createElement("code",null,"another-attr")," attribute to show the possibility to add more error attributes."),l.a.createElement(F,null),l.a.createElement("hr",null),l.a.createElement("h3",null,"Form that resets upon submitting"),l.a.createElement("p",null,"Also resets ",l.a.createElement("code",null,"is-touched")," and ",l.a.createElement("code",null,"is-focused")," input properties"),l.a.createElement(V,null),l.a.createElement("hr",null),l.a.createElement("h3",null,"List of invalid fields"),l.a.createElement(I,null),l.a.createElement("hr",null),l.a.createElement("h3",null,"A demo of enhanced validator that shows helper text on hover"),l.a.createElement(q,null),l.a.createElement("hr",null),l.a.createElement("div",{className:"text-center"},l.a.createElement("a",{href:"https://medium.com/@info_53938/how-i-tried-to-validate-react-forms-with-hooks-31634fc5385b",target:"_blank",className:"link",rel:"noopener noreferrer"},"How I tried to validate React forms (with hooks) at Medium"),l.a.createElement("br",null),l.a.createElement("a",{href:"https://github.com/DJanoskova/React-validator-demo",target:"_blank",rel:"noopener noreferrer",className:"link"},"The source code at GitHub")))};s.a.render(l.a.createElement(N,null),document.getElementById("root"))}},[[102,1,2]]]);
//# sourceMappingURL=main.fe7399e9.chunk.js.map