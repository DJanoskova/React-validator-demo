{"version":3,"sources":["utils/validator.js","components/MaterialForm.js","components/CustomForm.js","components/ResettingForm.js","components/ErrorsForm.js","App.js","index.js"],"names":["useFormInput","_ref","name","formHandler","_ref$validation","validation","handleError","defaultInvalidAttr","callback","_formHandler","Object","slicedToArray","formData","setFormData","formValue","_useState","useState","_useState2","value","setValue","_useState3","_useState4","isValid","setIsValid","_useState5","_useState6","isTouched","setIsTouched","_useState7","_useState8","isFocused","setIsFocused","handleValidation","fieldsToValidate","keys","forEach","property","length","replace","split","fieldName","trim","isRequired","isEmpty","rule","options","validator","validate","useEffect","invalidAttr","objectSpread","onChange","_ref2","target","defineProperty","onFocus","onBlur","useForm","defaultValues","arguments","undefined","error","errorHandler","_useState9","_useState10","mounted","setMounted","_formHandler2","values","setValues","_errorHandler","errors","setErrors","index","findIndex","splice","push","uniqueErrors","toConsumableArray","Set","useInput","withStyles","marginTop","classes","_useForm","username","email","react_default","a","createElement","onSubmit","e","preventDefault","console","log","TextField_default","assign","fullWidth","label","className","Button_default","type","disabled","color","variant","CustomForm","age","another-attr","ResettingForm","ErrorsForm","password","passwordVerification","Fragment","isLength","min","equals","map","key","App","components_MaterialForm","components_CustomForm","components_ResettingForm","components_ErrorsForm","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.dffd9952.chunk.js","sourcesContent":["import { useEffect, useState } from 'react';\nimport validator from 'validator';\n\nexport function useFormInput({\n  name,\n  formHandler,\n  validation = '',\n  handleError,\n  defaultInvalidAttr,\n  callback\n}) {\n  const [formData, setFormData] = formHandler;\n  const formValue = formData[name] || '';\n\n  const [value, setValue] = useState(formValue);\n  const [isValid, setIsValid] = useState(true);\n  const [isTouched, setIsTouched] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n\n  function handleValidation(value) {\n    const isValid = validate(value, validation);\n    setIsValid(isValid);\n    handleError(name, isValid);\n  }\n\n  // initial validation\n  useEffect(() => {\n    handleValidation(value);\n  }, []);\n\n  // watch for external parent data changes\n  useEffect(() => {\n    if (value !== formValue) {\n      setValue(formValue);\n      setIsTouched(false);\n      setIsFocused(false);\n    }\n  }, [formValue]);\n\n  // validate on value change\n  useEffect(() => {\n    handleValidation(value);\n  }, [value]);\n\n  // rewrite self and parent's value\n  function handleChange({ target }) {\n    let { value } = target;\n    if (callback) value = callback(value);\n\n    setValue(value);\n    setFormData({\n      ...formData,\n      [name]: value\n    });\n  }\n\n  const handleFocus = () => {\n    if (!isTouched) setIsTouched(true);\n    setIsFocused(true);\n    handleValidation(value);\n  };\n\n  const handleBlur = () => {\n    setIsFocused(false);\n  };\n\n  const showError = !isValid && isTouched && !isFocused;\n  const invalidAttr = showError ? defaultInvalidAttr : null;\n\n  return {\n    value,\n    name,\n    onChange: handleChange,\n    onFocus: handleFocus,\n    onBlur: handleBlur,\n    ...invalidAttr\n  };\n}\n\nexport function useForm(defaultValues, invalidAttr = { error: true }) {\n  const formHandler = useState(defaultValues);\n  const errorHandler = useState([]);\n  const [mounted, setMounted] = useState(false);\n\n  const [values, setValues] = formHandler;\n  const [errors, setErrors] = errorHandler;\n\n  // initial mounted flag\n  useEffect(() => setMounted(true), []);\n\n  const handleError = (name, isValid) => {\n    if (!isValid) {\n      errors.push(name);\n    } else {\n      const index = errors.findIndex(error => error === name);\n      if (index > -1) errors.splice(index, 1);\n    }\n\n    const uniqueErrors = [...new Set(errors)];\n    setErrors(uniqueErrors);\n  };\n\n  const useInput = (name, validation, callback = null) =>\n    useFormInput({\n      name,\n      validation,\n      formHandler,\n      handleError,\n      callback,\n      defaultInvalidAttr: invalidAttr\n    });\n\n  return {\n    values,\n    setValues,\n    useInput,\n    errors,\n    isValid: mounted && !errors.length\n  };\n}\n\nexport function validate(value, validation) {\n  const fieldsToValidate = {};\n  let trimmedValidation;\n\n  switch (typeof validation) {\n    case 'object':\n      Object.keys(validation).forEach(property => {\n        fieldsToValidate[property] = validation[property]\n      });\n      break;\n\n    case 'string':\n    default:\n      if (!validation.length) return true;\n\n      trimmedValidation = validation.replace(/ /g, '');\n      trimmedValidation.split(',').forEach(fieldName => {\n        fieldsToValidate[fieldName.trim()] = true;\n      });\n  }\n\n  // check whether we do need to validate at all\n  const isRequired = fieldsToValidate.isRequired || (fieldsToValidate.isEmpty && fieldsToValidate.isEmpty !== false);\n  if (!value && !isRequired) return true;\n\n  let isValid = true;\n\n  Object.keys(fieldsToValidate).forEach(rule => {\n    // don't proceed if we're already invalid\n    if (!isValid) return;\n\n    const options = fieldsToValidate[rule];\n\n    switch (rule) {\n      case 'isRequired':\n        if (!value) isValid = false;\n        break;\n\n      default:\n        switch (options) {\n          case true:\n          case null:\n            isValid = validator[rule](value);\n            break;\n          case false:\n            isValid = !validator[rule](value);\n            break;\n          default:\n            isValid = validator[rule](value, options);\n        }\n    }\n  });\n\n  return isValid;\n}\n","import React from 'react';\n\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport withStyles from '@material-ui/core/styles/withStyles';\n\nimport { useForm } from '../utils/validator';\n\nconst styles = {\n  marginTop: {\n    marginTop: '1rem'\n  }\n};\n\nconst MaterialForm = ({ classes }) => {\n  const { values, useInput, isValid } = useForm({\n    username: '',\n    email: ''\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <TextField\n        fullWidth\n        label=\"Username *\"\n        {...useInput('username', 'isRequired')}\n      />\n\n      <TextField\n        fullWidth\n        label=\"E-mail *\"\n        className={classes.marginTop}\n        {...useInput('email', 'isRequired, isEmail')}\n      />\n\n      <Button type=\"submit\"\n        disabled={!isValid}\n        color=\"primary\"\n        className={classes.marginTop}\n        variant=\"contained\">\n        Submit\n      </Button>\n    </form>\n  )\n};\n\nexport default withStyles(styles)(MaterialForm);","import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst CustomForm = () => {\n  const defaultValues = {\n    username: '',\n    email: '',\n    age: null\n  };\n  const customErrorAttribute = {\n    className: 'has-error',\n    'another-attr': 'look-at-me'\n  };\n\n  const { values, useInput, isValid } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-body\">\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', {\n            isRequired: true\n          })}\n        />\n\n        <label>E-mail</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail')}\n        />\n\n        <label>Age</label>\n        <input\n          type=\"number\"\n          {...useInput('age', 'isInt')}\n        />\n      </div>\n\n      <button type=\"submit\" disabled={!isValid}>\n        Submit\n      </button>\n    </form>\n  )\n};\n\nexport default CustomForm;","import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst ResettingForm = () => {\n  const defaultValues = {\n    username: '',\n    email: ''\n  };\n  const customErrorAttribute = {\n    className: 'has-error'\n  };\n\n  const { values, useInput, isValid, setValues } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values);\n    setValues({\n      username: '',\n      email: ''\n    })\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className=\"form-body\">\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', {\n            isRequired: true\n          })}\n        />\n\n        <label>E-mail *</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail, isRequired')}\n        />\n      </div>\n\n      <button type=\"submit\" disabled={!isValid}>\n        Submit\n      </button>\n    </form>\n  )\n};\n\nexport default ResettingForm;","import React from 'react';\n\nimport { useForm } from '../utils/validator';\n\nconst ErrorsForm = () => {\n  const defaultValues = {\n    username: '',\n    email: '',\n    age: '',\n    password: '',\n    passwordVerification: ''\n  };\n  const customErrorAttribute = {\n    className: 'has-error'\n  };\n\n  const { values, useInput, isValid, errors } = useForm(defaultValues, customErrorAttribute);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(values)\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n\n        <label>Username *</label>\n        <input\n          type=\"text\"\n          {...useInput('username', 'isRequired')}\n        />\n\n        <label>E-mail *</label>\n        <input\n          type=\"text\"\n          {...useInput('email', 'isEmail, isRequired')}\n        />\n\n        <label>Age *</label>\n        <input\n          type=\"text\"\n          {...useInput('age', 'isInt, isRequired')}\n        />\n\n        <label>Password * <span className=\"small\">min. 6 characters</span></label>\n        <input\n          type=\"password\"\n          {...useInput('password', {\n            isRequired: true,\n            isLength: {\n              min: 6\n            }\n          })}\n        />\n\n        <label>Password verification</label>\n        <input\n          type=\"password\"\n          {...useInput('passwordVerification', {\n            isRequired: true,\n            equals: values.password\n          })}\n        />\n\n        <button type=\"submit\" disabled={!isValid}>\n          Submit\n        </button>\n      </form>\n\n      <br />\n\n      {!!errors.length && 'Invalid fields:'}\n      <ul>\n        {errors.map(error => <li key={error}>{error}</li>)}\n      </ul>\n    </>\n  )\n};\n\nexport default ErrorsForm;","import React from 'react';\nimport './index.css';\n\nimport MaterialForm from './components/MaterialForm';\nimport CustomForm from './components/CustomForm';\nimport ResettingForm from './components/ResettingForm';\nimport ErrorsForm from './components/ErrorsForm';\n\nconst App = () => (\n  <div className=\"container\">\n    <h3>Simple material form</h3>\n    <MaterialForm />\n\n    <hr />\n\n    <h3>Form with custom error input class</h3>\n    <p>We're adding a <code>.has-error</code> class to the inputs. We're also adding\n      a <code>another-attr</code> attribute to show the possibility to add more error attributes.</p>\n    <CustomForm />\n\n    <hr />\n\n    <h3>Form that resets upon submitting</h3>\n    <p>Also resets <code>is-touched</code> and <code>is-focused</code> input properties</p>\n    <ResettingForm />\n\n    <hr />\n\n    <h3>List of invalid fields</h3>\n    <ErrorsForm />\n  </div>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}